digraph "testing::ScopedFakeTestPartResultReporter"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node2 [label="{testing::ScopedFakeTestPart\lResultReporter\n|- intercept_mode_\l|+ ScopedFakeTestPartResult\lReporter()\l+ ScopedFakeTestPartResult\lReporter()\l+ ~ScopedFakeTestPartResult\lReporter()\l+ ReportTestPartResult()\l- Init()\l- GTEST_DISALLOW_COPY\l_AND_ASSIGN_()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{testing::TestPartResultReporter\lInterface\n||+ ~TestPartResultReporterInterface()\l+ ReportTestPartResult()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d6e/classtesting_1_1_test_part_result_reporter_interface.html"];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -old_reporter_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -result_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{testing::TestPartResultArray\n|- array_\l|+ TestPartResultArray()\l+ Append()\l+ GetTestPartResult()\l+ size()\l- GTEST_DISALLOW_COPY\l_AND_ASSIGN_()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d5d/classtesting_1_1_test_part_result_array.html"];
}
