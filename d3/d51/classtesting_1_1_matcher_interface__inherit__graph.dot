digraph "testing::MatcherInterface&lt; T &gt;"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node0 [label="{testing::MatcherInterface\< T \>\n||+ MatchAndExplain()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node1 [label="{testing::MatcherDescriber\lInterface\n||+ ~MatcherDescriberInterface()\l+ DescribeTo()\l+ DescribeNegationTo()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/d2a/classtesting_1_1_matcher_describer_interface.html"];
  Node0 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{testing::gmock_matchers\l_test::EvenMatcherImpl\l\< int \>\n||+ MatchAndExplain()\l+ DescribeTo()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/dea/classtesting_1_1gmock__matchers__test_1_1_even_matcher_impl.html"];
  Node0 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{testing::gmock_matchers\l_test::GreaterThanMatcher\l\< int \>\n|- rhs_\l|+ GreaterThanMatcher()\l+ DescribeTo()\l+ MatchAndExplain()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/da1/classtesting_1_1gmock__matchers__test_1_1_greater_than_matcher.html"];
  Node0 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{testing::gmock_matchers\l_test::NewEvenMatcherImpl\l\< int \>\n||+ MatchAndExplain()\l+ DescribeTo()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/d59/classtesting_1_1gmock__matchers__test_1_1_new_even_matcher_impl.html"];
  Node0 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{testing::internal::\lAnyMatcherImpl\< T \>\n||+ MatchAndExplain()\l+ DescribeTo()\l+ DescribeNegationTo()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d19/classtesting_1_1internal_1_1_any_matcher_impl.html"];
  Node0 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{testing::internal::\lBothOfMatcherImpl\< T \>\n|- matcher1_\l- matcher2_\l|+ BothOfMatcherImpl()\l+ DescribeTo()\l+ DescribeNegationTo()\l+ MatchAndExplain()\l- GTEST_DISALLOW_ASSIGN_()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d52/classtesting_1_1internal_1_1_both_of_matcher_impl.html"];
  Node0 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 [label="{testing::internal::\lBoundSecondMatcher\<\l T \>::Impl\n|- mono_tuple2_matcher_\l- second_value_\l|+ Impl()\l+ DescribeTo()\l+ MatchAndExplain()\l- GTEST_DISALLOW_ASSIGN_()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d36/classtesting_1_1internal_1_1_bound_second_matcher_1_1_impl.html"];
  Node0 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node8 [label="{testing::internal::\lEitherOfMatcherImpl\< T \>\n|- matcher1_\l- matcher2_\l|+ EitherOfMatcherImpl()\l+ DescribeTo()\l+ DescribeNegationTo()\l+ MatchAndExplain()\l- GTEST_DISALLOW_ASSIGN_()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/d37/classtesting_1_1internal_1_1_either_of_matcher_impl.html"];
  Node0 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node9 [label="{testing::internal::\lFloatingEqMatcher\< T\l \>::Impl\n|- expected_\l- nan_eq_nan_\l- max_abs_error_\l|+ Impl()\l+ MatchAndExplain()\l+ DescribeTo()\l+ DescribeNegationTo()\l- HasMaxAbsError()\l- GTEST_DISALLOW_ASSIGN_()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/db4/classtesting_1_1internal_1_1_floating_eq_matcher_1_1_impl.html"];
  Node0 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node10 [label="{testing::internal::\lMatcherCastImpl\< T,\l Matcher\< U \> \>::Impl\n|- source_matcher_\l|+ Impl()\l+ MatchAndExplain()\l+ DescribeTo()\l+ DescribeNegationTo()\l- GTEST_DISALLOW_ASSIGN_()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d04/classtesting_1_1internal_1_1_matcher_cast_impl_3_01_t_00_01_matcher_3_01_u_01_4_01_4_1_1_impl.html"];
  Node0 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node11 [label="{testing::internal::\lNotMatcherImpl\< T \>\n|- matcher_\l|+ NotMatcherImpl()\l+ MatchAndExplain()\l+ DescribeTo()\l+ DescribeNegationTo()\l- GTEST_DISALLOW_ASSIGN_()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d26/classtesting_1_1internal_1_1_not_matcher_impl.html"];
  Node0 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node12 [label="{testing::internal::\lResultOfMatcher\< T \>\l::Impl\n|- callable_\l- matcher_\l|+ Impl()\l+ DescribeTo()\l+ DescribeNegationTo()\l+ MatchAndExplain()\l- GTEST_DISALLOW_ASSIGN_()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/df7/classtesting_1_1internal_1_1_result_of_matcher_1_1_impl.html"];
  Node0 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node13 [label="{testing::PolymorphicMatcher\l\< T \>::MonomorphicImpl\n|- impl_\l|+ MonomorphicImpl()\l+ DescribeTo()\l+ DescribeNegationTo()\l+ MatchAndExplain()\l- GTEST_DISALLOW_ASSIGN_()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d41/classtesting_1_1_polymorphic_matcher_1_1_monomorphic_impl.html"];
}
