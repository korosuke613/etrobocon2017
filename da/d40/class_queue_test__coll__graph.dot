digraph "QueueTest"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node3 [label="{QueueTest\n||# SetUp()\l# MapTester()\l# SetUp()\l# Double()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{QuickTest\n|# start_time_\l|# SetUp()\l# TearDown()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/d15/class_quick_test.html"];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{testing::Test\n||+ ~Test()\l+ SetUpTestCase()\l+ TearDownTestCase()\l+ HasFatalFailure()\l+ HasNonfatalFailure()\l+ HasFailure()\l+ RecordProperty()\l+ RecordProperty()\l# Test()\l# SetUp()\l# TearDown()\l- TestBody()\l- Run()\l- DeleteSelf_()\l- Setup()\l- GTEST_DISALLOW_COPY\l_AND_ASSIGN_()\l- HasSameFixtureClass()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d69/classtesting_1_1_test.html"];
  Node6 -> Node5 [color="grey25",fontsize="10",style="solid",label=" -gtest_flag_saver_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{testing::internal::\lscoped_ptr\< GTEST_FLAG\l_SAVER_ \>\n|- ptr_\l|+ scoped_ptr()\l+ ~scoped_ptr()\l+ operator*()\l+ operator-\>()\l+ get()\l+ release()\l+ reset()\l- GTEST_DISALLOW_COPY\l_AND_ASSIGN_()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/d6a/classtesting_1_1internal_1_1scoped__ptr.html"];
  Node5 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 -> Node3 [color="grey25",fontsize="10",style="solid",label=" #q2_\n#q1_\n#q0_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{Queue\< int \>\n|- size_\l|+ Queue()\l+ ~Queue()\l+ Clear()\l+ Size()\l+ Head()\l+ Head()\l+ Last()\l+ Last()\l+ Enqueue()\l+ Dequeue()\l+ Map()\l- Queue()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/da4/class_queue.html"];
  Node8 -> Node7 [color="grey25",fontsize="10",style="solid",label=" -last_\n-head_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{QueueNode\< int \>\n|- element_\l|+ element()\l+ next()\l+ next()\l- QueueNode()\l- QueueNode()\l- operator=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d16/class_queue_node.html"];
  Node9 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -next_" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{QueueNode\< E \>\n|- element_\l|+ element()\l+ next()\l+ next()\l- QueueNode()\l- operator=()\l- QueueNode()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d1/d16/class_queue_node.html"];
  Node9 -> Node9 [color="grey25",fontsize="10",style="solid",label=" -next_" ,arrowhead="odiamond",fontname="Helvetica"];
}
